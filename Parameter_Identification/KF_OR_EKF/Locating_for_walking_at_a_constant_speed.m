close all
clear
clc
 %一维 FK
%% 没有控制量，一直匀速直线运动，然后过程有干扰。纯估计位置
Q = [1 0;0 1]; %过程误差，Q矩阵
R = [0.1 0;0 0.1]; %观测误差，R矩阵
A = [1 1;0 1]; %A矩阵
H = [1 0;0 1]; %H矩阵
I = [1 0;0 1]; %单位矩阵
epoch = 30;
P = [1 0;0 1];
X = ones(epoch, 2); %生成位置和速度矩阵
X(1,:) =  [0 1];  %初始的实际位置和速度（从位置0开始，假定以匀速1运动）
Xa = ones(epoch, 2);  %用a表示头上的小帽子，后验
Xa(1,:) = [0 1];
Xa_ = ones(epoch, 2);  %先验
Xa_(1,:) = [0 1];  %初始化先验
Z = ones(epoch, 2); %测量的位置和速度
Z(1,:) = [0 1]; %初始测量的位置和速度
for k = 2:epoch
    %更新误差
    w1 = normrnd(0,sqrt(Q(1,1))); %位置过程误差
    w2 = normrnd(0,sqrt(Q(2,2))); %速度过程误差
    W = [w1 w2];
    v1 = normrnd(0,sqrt(R(1,1))); %观测位置过程误差
    v2 = normrnd(0,sqrt(R(2,2))); %观测速度过程误差
    V = [v1 v2];
    %更新实际位置、实际速度
    X(k,:) = (A*X(k-1,:)'+ W')';%----------------------------------------------------模型：实际状态更新方程
    %更新测量位置、测量速度
    Z(k,:) = (H*X(k,:)' + V')';%----------------------------------------------------模型：实际观测值更新方程
    %预测   
    Xa_(k,:) = (A*Xa(k-1,:)')'; %----------------------------------------------------公式1：一步预测方程 X^K|k-1  先验估计
    P_ = A*P*A' + Q;%----------------------------------------------------公式2：一步预测误差协方差矩阵 Pk|k-1  先验估计协方差矩阵
    %校正
    K = P_*H'*inv((H*P_)*H' + R);%----------------------------------------------------公式3：FK最优滤波增益 Kk
    P = (I -  K*H)*P_;%----------------------------------------------------公式4：PK|K 状态估计误差协方差,本来让其迹最小来求权重Kk的最优取值。由于已经求出解析解，故不需要再算该值。 后验估计误差协方差矩阵
    Xa(k,:) = (Xa_(k,:)' + K*(Z(k,:)' - H*Xa_(k,:)'))';%后验估计  
end
%通过以下三个值比较平均绝对误差。mae_Xa 小于mae_Xa_和mae_Z，说明融合有效
mae_Xa = sum(abs(Xa(:,1)-X(:,1)));
mae_Xa_ = sum(abs(Xa_(:,1)-X(:,1)));
mae_Z = sum(abs(Z(:,1)-X(:,1)));
plot(1:epoch, X(:,1), 'r*-', 1:epoch, Z(:,1), '-b*', 1:epoch, Xa_(:,1), '-g*', 1:epoch, Xa(:,1), '-k*','LineWidth',2)
 
hold on
xlabel step
ylabel 位置
legend('实际位置', '测量位置', '先验估计位置', '后验估计位置')